
/*<
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;


import Entities.Producto;
import Services.CategoriaProductoServiceImpl;
import Services.ProductoServicesImpl;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
        





/**
 *
 * @author victo
 */
public class Pedidos extends javax.swing.JFrame {

    /**
     * Creates new form Pedidos
     */
    public Pedidos() {
        initComponents();
        
discountEdit.getDocument().addDocumentListener(new DocumentListener(){
   @Override
   public void insertUpdate(DocumentEvent e){
       aplicarDescuento();
   }
     @Override
   public void removeUpdate(DocumentEvent e){
       aplicarDescuento();
   }
    @Override
   public void changedUpdate(DocumentEvent e){
       aplicarDescuento();
   }

           
            
});        
        
        
        
        
        CargarCategorias();
        SelectorCategoria.addActionListener(evt->{
        String seleccion=(String)SelectorCategoria.getSelectedItem();
        if(seleccion !=null &&!seleccion.equals("Seleccione Una categoria")){
            
          CargarProductos(seleccion);  
            
        }
        }
        );
        
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        MesaLabel = new javax.swing.JLabel();
        MesaEdit = new javax.swing.JTextField();
        SelectorCategoria = new javax.swing.JComboBox<>();
        CantidadLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaProd = new javax.swing.JList<>();
        CantidadEdit = new javax.swing.JTextField();
        AgregarProductosButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        PedidoTabla = new javax.swing.JTable();
        EliminarProducto = new javax.swing.JButton();
        SubtotalLabel = new javax.swing.JLabel();
        SubtotalEdit = new javax.swing.JTextField();
        CancelarPedido = new javax.swing.JButton();
        GestionMesaButton = new javax.swing.JButton();
        discountEdit = new javax.swing.JTextField();
        DiscountLabel = new javax.swing.JLabel();
        conceptEdit = new javax.swing.JTextField();
        ConceptLabel = new javax.swing.JLabel();
        totalEdit = new javax.swing.JTextField();
        TotalLabel = new javax.swing.JLabel();
        GestionMenuButton = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        ConfirmarPedidoButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MesaLabel.setText("Mesa(proximamente):");

        MesaEdit.setEditable(false);

        SelectorCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una Categoria" }));

        CantidadLabel.setText("Cantidad :");

        jScrollPane1.setViewportView(ListaProd);

        AgregarProductosButton.setText("Agregar Producto(s)");
        AgregarProductosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarProductosButtonActionPerformed(evt);
            }
        });

        PedidoTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Producto", "Categoria", "Precio", "Cantidad", "Mesa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PedidoTabla);

        EliminarProducto.setText("Eliminar Producto");
        EliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarProductoActionPerformed(evt);
            }
        });

        SubtotalLabel.setText("Subtotal:");

        SubtotalEdit.setEditable(false);
        SubtotalEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtotalEditActionPerformed(evt);
            }
        });

        CancelarPedido.setText("Cancelar Pedido");
        CancelarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarPedidoActionPerformed(evt);
            }
        });

        GestionMesaButton.setText("Gestion Mesas");
        GestionMesaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionMesaButtonActionPerformed(evt);
            }
        });

        DiscountLabel.setText("Descuento(en %):");

        ConceptLabel.setText("Concepto Descuento:");

        TotalLabel.setText("Total:");

        GestionMenuButton.setText("Gestion Menu");
        GestionMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionMenuButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Pedidos");

        ConfirmarPedidoButton.setText("Confirmar Pedido");
        ConfirmarPedidoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarPedidoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(GestionMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                .addComponent(SelectorCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(CantidadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CantidadEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(AgregarProductosButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(GestionMesaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(MesaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addComponent(MesaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SubtotalLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(DiscountLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ConceptLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(conceptEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(discountEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SubtotalEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(TotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(totalEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(EliminarProducto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ConfirmarPedidoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelarPedido)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GestionMenuButton)
                    .addComponent(GestionMesaButton))
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MesaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MesaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SelectorCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CantidadEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CantidadLabel))
                .addGap(12, 12, 12)
                .addComponent(AgregarProductosButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubtotalLabel)
                    .addComponent(SubtotalEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DiscountLabel)
                    .addComponent(discountEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conceptEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConceptLabel))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalLabel))
                .addGap(18, 18, 18)
                .addComponent(EliminarProducto)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelarPedido)
                    .addComponent(ConfirmarPedidoButton))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarCategorias(){
     try{
         CategoriaProductoServiceImpl categoriaService =new CategoriaProductoServiceImpl();
         java.util.List<Entities.CategoriaProducto>categorias=categoriaService.List();
         
         SelectorCategoria.removeAllItems();
         SelectorCategoria.addItem("Seleccione una Categoria");
         for(Entities.CategoriaProducto cat: categorias){
            SelectorCategoria.addItem(cat.getCategoria());
         }
      }catch(Exception e) {
         javax.swing.JOptionPane.showMessageDialog(this,
                 "Error al cargar categorias :"+e.getMessage(),
                 "Error",
                 javax.swing.JOptionPane.ERROR_MESSAGE);
         
         
         
     }
    } 
    
    
private void CargarProductos(String Categoria){
   try{
    CategoriaProductoServiceImpl categoriaService= new CategoriaProductoServiceImpl();
    List<Entities.CategoriaProducto>categorias=categoriaService.List();
    Entities.CategoriaProducto categoriaSelec=categorias.stream().filter(c->c.getCategoria()
            .equals(Categoria)).findFirst().orElse(null);
            
    if(categoriaSelec!=null){
       ProductoServicesImpl ProductoServices=new ProductoServicesImpl();
       List<Entities.Producto>productos=ProductoServices.GetbyCategoria(categoriaSelec.getIdCategoria());
       DefaultListModel<String>modelo=new DefaultListModel<>();
       for(Entities.Producto p:productos){
           modelo.addElement(p.getNombre()+"-$"+p.getPrecio());
       }
       
       ListaProd.setModel(modelo);
       
       
    }
    
   }catch(Exception e){
    javax.swing.JOptionPane.showMessageDialog(
    this,
            "No se Encontro la categoria Seleccionada:"+e.getMessage(),
            "Error",
    javax.swing.JOptionPane.ERROR_MESSAGE
    
    );
    
    
}
}



    
    
    


    
    
    private void SubtotalEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtotalEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubtotalEditActionPerformed

    private void GestionMesaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionMesaButtonActionPerformed
     MainFormMesas ventanaMesas = new MainFormMesas();
    ventanaMesas.pack();
    ventanaMesas.setLocationRelativeTo(this); // Centrada respecto a esta ventana
    ventanaMesas.setVisible(true);
    this.setVisible(false);   // TODO add your handling code here:
    }//GEN-LAST:event_GestionMesaButtonActionPerformed

    private void GestionMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionMenuButtonActionPerformed
      GestionMenu ventanaGestionMenu = new GestionMenu();
       ventanaGestionMenu.pack();
       ventanaGestionMenu.setLocationRelativeTo(this);
       ventanaGestionMenu.setVisible(true);
       this.setVisible(false); 
    }//GEN-LAST:event_GestionMenuButtonActionPerformed

    private void AgregarProductosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarProductosButtonActionPerformed
    String productoSelected=ListaProd.getSelectedValue();
        String cantidadText=CantidadEdit.getText();
    String mesaText=MesaEdit.getText();
    String categoria=(String)SelectorCategoria.getSelectedItem();

    int cantidad;
    try{
    cantidad=Integer.parseInt(cantidadText);
    if(cantidad <=0)throw new NumberFormatException();
    }catch(NumberFormatException ex){
javax.swing.JOptionPane.showMessageDialog(this,"La cantidad debe ser positiva");
return;
    }
    String[] division=productoSelected.split("-\\$");
    String nombreP=division[0];
    double precio=Double.parseDouble(division[1]);
    double subtotal=precio*cantidad;
    
  String noTable;
if(mesaText!=null && !mesaText.isEmpty()){
noTable=mesaText;
}else{
noTable="Pedido para delivery";

}
    javax.swing.table.DefaultTableModel model=(javax.swing.table.DefaultTableModel)PedidoTabla.getModel();
    model.insertRow(0,new Object[]{
    nombreP,
    categoria,
    String.format("%.2f",precio),
    cantidad,
   noTable
})
  

;
CantidadEdit.setText("");
       
recalcularSubtotal();
    }//GEN-LAST:event_AgregarProductosButtonActionPerformed

    private void EliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarProductoActionPerformed
     int selectRow=-1;
     
       selectRow=PedidoTabla.getSelectedRow();
     
         if (selectRow==-1){
            JOptionPane.showMessageDialog(null, "Seleccione una fila para eliminar");
            return; 
         }
           try{
              javax.swing.table.DefaultTableModel model=
                      (javax.swing.table.DefaultTableModel)PedidoTabla.getModel();
               
              model.removeRow(selectRow);
              
               recalcularSubtotal();
          
     }catch(Exception e ){
        javax.swing.JOptionPane.showMessageDialog(
        this,
              "Error al eliminar producto: " + e.getMessage()   
        
        );
         
     }
      
    }//GEN-LAST:event_EliminarProductoActionPerformed

    private void ConfirmarPedidoButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
   try {
        
        recalcularSubtotal();
        aplicarDescuento();

       
        Entities.PedidoMesa pedido = new Entities.PedidoMesa();


        float descuento = 0f;
        if (!discountEdit.getText().isEmpty()) {
            descuento = Float.parseFloat(discountEdit.getText().replace(",", "."));
        }
        pedido.setDescuento(descuento);


        pedido.setConceptoDescuento(conceptEdit.getText());

     
        double total = Double.parseDouble(totalEdit.getText().replace(",", "."));
        pedido.setTotal(total);

    
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) PedidoTabla.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
Object prodObj=model.getValueAt(i,0);
Object precioObj=model.getValueAt(i, 2);
Object cantidadObj=model.getValueAt(i,3);
        
if(prodObj==null ||precioObj==null ||cantidadObj==null){
    continue;
}

String nombreProducto=prodObj.toString();
double precio=Double.parseDouble(precioObj.toString().replace(",", "."));
int cantidad=Integer.parseInt(cantidadObj.toString());

Services.ProductoServicesImpl productoService=new Services.ProductoServicesImpl();
Entities.Producto producto=productoService.getByNombre(nombreProducto);


Entities.DetallePedido detalle=new Entities.DetallePedido(producto,cantidad);
pedido.guardarDetalle(detalle);


        }

Services.PedidoMesaServiceImpl service=new Services.PedidoMesaServiceImpl();
service.save(pedido);
        
        
        JOptionPane.showMessageDialog(this, " Pedido guardado correctamente");
for(int i=0;i<model.getRowCount();i++){
for(int j=0;j<model.getColumnCount();j++){
    model.setValueAt("", i,j);
}    
    
}
        
        
 SubtotalEdit.setText("0.00");
 discountEdit.setText("");
 conceptEdit.setText("");
 totalEdit.setText("0.00");
 CantidadEdit.setText("");
 ListaProd.clearSelection();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al confirmar el pedido: " + e.getMessage());
        e.printStackTrace();
    }  
 
    }                                                     

    private void CancelarPedidoActionPerformed(java.awt.event.ActionEvent evt) {                                               
      

           javax.swing.table.DefaultTableModel model=
                   (javax.swing.table.DefaultTableModel)PedidoTabla.getModel();
                          
       
           for(int i=0;i<model.getRowCount();i++){
for(int j=0;j<model.getColumnCount();j++){
    model.setValueAt("", i,j);
}    
    
}
                           
   SubtotalEdit.setText("0.00");
   discountEdit.setText("");
   conceptEdit.setText("");
   totalEdit.setText("0.00");
   CantidadEdit.setText("");
   SelectorCategoria.setSelectedIndex(0);
   ListaProd.clearSelection();
           
       } 
        
      
    

private void recalcularSubtotal(){
    javax.swing.table.DefaultTableModel model=(javax.swing.table.DefaultTableModel)PedidoTabla.getModel();
   double subtotal=0.0;
   for(int i=0;i<model.getRowCount();i++){
   Object precioObj=model.getValueAt(i,2);
Object cantidadObj=model.getValueAt(i,3);
if (precioObj == null || cantidadObj == null) continue;    

  double precio = Double.parseDouble(precioObj.toString().replace(",", "."));
    int cantidad=Integer.parseInt(cantidadObj.toString());
    subtotal+=precio*cantidad;
}

SubtotalEdit.setText(String.format("%.2f", subtotal));
 aplicarDescuento();   
}



    private void aplicarDescuento() {
 try{       
     conceptEdit.getText();
 
String getDescuento=discountEdit.getText();
String getSubtotal=SubtotalEdit.getText();
double subtotal=0.0;
double descuento=0.0;
double total=0.0;

if (getSubtotal !=null && !getSubtotal.isEmpty())
subtotal=Double.parseDouble(getSubtotal.replace(",","."));
     
if(getDescuento!=null && !getDescuento.isEmpty() ){
descuento=Double.parseDouble(getDescuento.replace(",","."));
    }                                                

if(descuento<0 || descuento>100 ){
conceptEdit.setText("Descuento no valido ");
total=subtotal;
}else{
    conceptEdit.setText("");
total=subtotal-(subtotal*(descuento/100));

if(descuento==0||getDescuento.isEmpty()){
 conceptEdit.setText("No aplica descuento");
total=subtotal   ;
    
}

if(conceptEdit.getText().isEmpty()) 
conceptEdit.setText(" varios ");


}
if(getDescuento.isEmpty()&& conceptEdit.getText().isEmpty()){
  total=subtotal;  
    
}


totalEdit.setText(String.format("%.2f", total));

 }catch(Exception e){
javax.swing.JOptionPane.showMessageDialog(this,"Error en el descuento aplicado");
 }
    
}
    
    
    
    




        
        
        
   

   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarProductosButton;
    private javax.swing.JButton CancelarPedido;
    private javax.swing.JTextField CantidadEdit;
    private javax.swing.JLabel CantidadLabel;
    private javax.swing.JLabel ConceptLabel;
    private javax.swing.JButton ConfirmarPedidoButton;
    private javax.swing.JLabel DiscountLabel;
    private javax.swing.JButton EliminarProducto;
    private javax.swing.JToggleButton GestionMenuButton;
    private javax.swing.JButton GestionMesaButton;
    private javax.swing.JList<String> ListaProd;
    private javax.swing.JTextField MesaEdit;
    private javax.swing.JLabel MesaLabel;
    private javax.swing.JTable PedidoTabla;
    private javax.swing.JComboBox<String> SelectorCategoria;
    private javax.swing.JTextField SubtotalEdit;
    private javax.swing.JLabel SubtotalLabel;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JTextField conceptEdit;
    private javax.swing.JTextField discountEdit;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField totalEdit;
    // End of variables declaration//GEN-END:variables

} 
